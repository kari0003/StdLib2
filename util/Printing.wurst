package Printing
import NoWurst

@configurable public var DEBUG_LEVEL = Loglevel.INFO
@configurable public var DEBUG_MSG_DURATION = 45.

public enum Loglevel
	TRACE
	DEBUG
	INFO
	WARNING
	ERROR
	
public function Loglevel.getTag() returns string
	switch this
		case TRACE
			return "|cffADADADtrace|r"
		case DEBUG
			return "|cff2685DCdebug|r"
		case INFO
			return "|cffFFCC00info|r"
		case WARNING
			return "|cffF47E3Ewarning|r"
		case ERROR
			return "|cffFB2700error|r"
	return "?"

/** Prints a simple message */
public function print(string msg)		
	DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., DEBUG_MSG_DURATION, msg)

/** Prints a special Notification-Message */
public function printLog(Loglevel loglvl, string msg)
	printLog(GetLocalPlayer(), loglvl, msg)
		
public function printLog(player showTo, Loglevel loglvl, string msg)
	if (DEBUG_LEVEL castTo int) <= (loglvl castTo int)
		let compositeMsg = loglvl.getTag() + " - " + msg
		DisplayTimedTextToPlayer(showTo, 0., 0., DEBUG_MSG_DURATION, compositeMsg)
	
/** Prints a simple message that is shown for the given duration */
public function printTimed(string msg, real duration)
	DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., duration, msg)
	
/** Prints a simple message that is shown to the player for the given duration */
public function printTimedToPlayer(string msg, real duration, player p)
	DisplayTimedTextToPlayer(p, 0., 0., duration, msg)
	
/** Prints a simple message after clearing all messages that is shown to the player for the given duration */
public function printTimedToPlayerClear(string msg, real duration, player p)
	if GetLocalPlayer() == p
		ClearTextMessages()
	DisplayTimedTextToPlayer(p, 0., 0., duration, msg)

